#!/usr/bin/with-contenv bash

# Fetch site or update existing
if [[ ! -d /config/www/Dashboard/.git ]]; then
  echo '-----------------------'
  echo '| Installing Organizr |'
  echo '-----------------------'
  mkdir -p /config/www/Dashboard
  echo 'Performing git clone...'
  git clone --progress --verbose -b v2-develop https://github.com/causefx/Organizr /config/www/Dashboard
  echo 'Sending info to Github.txt...'
  cd /config/www/Dashboard || (echo 'Failed to load Organizr repository folder'; exit)
  git rev-parse HEAD > /config/www/Dashboard/Github.txt
  echo 'Checking contents of Organizr directory...'
  ls -la
elif [[ -d /config/www/Dashboard/.git ]]; then
  echo '-----------------------'
  echo '|  Updating Organizr  |'
  echo '-----------------------'
  cd /config/www/Dashboard || (echo 'Failed to load Organizr repository folder'; exit)
  git fetch
  git reset --hard origin/v2-develop
  git checkout v2-develop
  git reset --hard origin/v2-develop
  git pull
  git rev-parse HEAD > /config/www/Dashboard/Github.txt
fi

# Copy over Nginx status config file if it doesn't exist
if [ ! -f /config/nginx/healthcheck.conf ]; then
  echo '----------------------------------'
  echo '| Copying Nginx status conf file |'
  echo '----------------------------------'
  cp /defaults/healthcheck.conf /config/nginx/healthcheck.conf
else
  :
fi

# Check for the include for the healthcheck conf and,
# if it does not exist, add it
if [[ $(grep -c healthcheck /config/nginx/site-confs/default) -eq 0 ]]; then
  sed -i $'s|root /config/www/Dashboard;|root /config/www/Dashboard;\\\n        include /config/nginx/healthcheck.conf;|g' /config/nginx/site-confs/default
elif [[ $(grep -c healthcheck /config/nginx/site-confs/default) -ge 1 ]]; then
  :
fi

# Check for the try_files line for CVE-2019-11043 and,
# if it does not exist, add it
if [[ $(grep -c try_files /config/nginx/site-confs/default) -eq 1 ]]; then
  sed -i $'s|fastcgi_split_path_info \^(\.+\\\.php)(\/\.+)\$;|fastcgi_split_path_info \^(\.+\\\.php)(\/\.+)\$;\\\n                try_files $fastcgi_script_name =404;|g' /config/nginx/site-confs/default
elif [[ $(grep -c try_files /config/nginx/site-confs/default) -ge 2 ]]; then
  :
fi

# Check for the fastcgi_hide_header line and,
# if it does not exist, add it
if [[ $(grep -c fastcgi_hide_header /config/nginx/site-confs/default) -eq 0 ]]; then
  sed -i $'s|include /etc/nginx/fastcgi_params;|include /etc/nginx/fastcgi_params;\\\n                fastcgi_hide_header X-Powered-By;|g' /config/nginx/site-confs/default
elif [[ $(grep -c fastcgi_hide_header /config/nginx/site-confs/default) -ge 1 ]]; then
  :
fi

# Set Permissions
chown -R abc:abc \
	/config
