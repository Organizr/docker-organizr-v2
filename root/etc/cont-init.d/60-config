#!/usr/bin/with-contenv bash

# Backup the www.conf file for PHP-FPM if it exists
# & copy in www.conf for PHP-FPM
if [ ! -f /etc/php7/php-fpm.d/www.conf.original ]; then
  echo '--------------------------------------'
  echo '|      Backing up www.conf file      |'
  echo '--------------------------------------'
  mv /etc/php7/php-fpm.d/www.conf /etc/php7/php-fpm.d/www.conf.original
  echo '--------------------------------------'
  echo '|       Copying www.conf file        |'
  echo '--------------------------------------'
  cp /defaults/www.conf /etc/php7/php-fpm.d/www.conf
elif [[ ! -f /config/php/www.conf ]]; then
  cp /defaults/www.conf /etc/php7/php-fpm.d/www.conf
fi

# Copy over modified default site file
# to use PHP-FPM
if [ ! -f /config/nginx/site-confs/.default.original ]; then
  echo '--------------------------------------'
  echo '|      Backing up default file       |'
  echo '--------------------------------------'
  if [ -f /config/nginx/site-confs/default ]; then
    mv /config/nginx/site-confs/default /config/nginx/site-confs/.default.original
  else
    :
  fi
  echo '--------------------------------------'
  echo '|      Copying default site file     |'
  echo '--------------------------------------'
  cp /defaults/default /config/nginx/site-confs/default
else
  :
fi

# Check for the include for the healthcheck conf and,
# if it does not exist, add it
if [[ $(grep -c healthcheck /config/nginx/site-confs/default) -eq 0 ]]; then
  sed -i $'s|root /config/www/Dashboard;|root /config/www/Dashboard;\\\n        include /config/nginx/healthcheck.conf;|g' /config/nginx/site-confs/default
elif [[ $(grep -c healthcheck /config/nginx/site-confs/default) -ge 1 ]]; then
  :
fi

# Check for the try_files line for CVE-2019-11043 and,
# if it does not exist, add it
if [[ $(grep -c try_files /config/nginx/site-confs/default) -eq 1 ]]; then
  sed -i $'s|fastcgi_split_path_info \^(\.+\\\.php)(\/\.+)\$;|fastcgi_split_path_info \^(\.+\\\.php)(\/\.+)\$;\\\n                try_files $fastcgi_script_name =404;|g' /config/nginx/site-confs/default
elif [[ $(grep -c try_files /config/nginx/site-confs/default) -ge 2 ]]; then
  :
fi

# Check for the fastcgi_hide_header line and,
# if it does not exist, add it
if [[ $(grep -c fastcgi_hide_header /config/nginx/site-confs/default) -eq 0 ]]; then
  sed -i $'s|include /etc/nginx/fastcgi_params;|include /etc/nginx/fastcgi_params;\\\n                fastcgi_hide_header X-Powered-By;|g' /config/nginx/site-confs/default
elif [[ $(grep -c fastcgi_hide_header /config/nginx/site-confs/default) -ge 1 ]]; then
  :
fi

# Copy over Nginx status config file if it doesn't exist
if [ ! -f /config/nginx/healthcheck.conf ]; then
  echo 'Checking contents of root dir...'
  ls -la /
  echo 'Checking contents of /defaults dir...'
  ls -la /defaults
  echo 'Checking contents of /etc/cont-init.d...'
  ls -la /etc/cont-init.d
  echo 'Checking contents of /config dir...'
  ls -la /config
  echo 'Checking contents of /config/nginx dir...'
  ls -la /config/nginx
  echo 'Checking contents of /config/nginx/site-confs'
  ls -la /config/nginx/site-confs
  echo '----------------------------------'
  echo '| Copying Nginx status conf file |'
  echo '----------------------------------'
  cp /defaults/healthcheck.conf /config/nginx/healthcheck.conf
else
  :
fi

# Copy over Docker.txt file for Organizr check
cp /defaults/Docker.txt /config/www/Dashboard/Docker.txt

# Triple-checking permissions are correct
#Â Set Permissions
chown -R abc:abc /config
